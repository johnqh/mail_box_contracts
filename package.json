{
  "name": "@johnqh/mail_box_contracts",
  "version": "1.7.3",
  "type": "module",
  "main": "dist/unified-esm/src/unified/index.js",
  "module": "dist/unified-esm/src/unified/index.js",
  "types": "dist/unified-esm/src/unified/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/unified-esm/src/unified/index.js",
      "require": "./dist/unified/src/unified/index.js",
      "types": "./dist/unified/src/unified/index.d.ts"
    }
  },
  "scripts": {
    "build": "npm run build:evm && npm run build:solana && npm run build:unified",
    "build:ci": "npm run build:unified",
    "build:evm": "npx hardhat compile && tsc --project tsconfig.evm.json",
    "build:solana": "cargo build --manifest-path programs/mailer/Cargo.toml && tsc --project tsconfig.solana.json",
    "build:unified": "npm run build:unified:esm && npm run build:unified:cjs",
    "build:unified:cjs": "tsc --project tsconfig.unified.cjs.json && node scripts/fix-cjs-imports.js",
    "build:unified:esm": "tsc --project tsconfig.unified.esm.json && node scripts/fix-esm-imports.js",
    "test": "npm run test:evm && npm run test:solana && npm run test:unified:direct",
    "test:ci": "npm run build:unified && npm run test:unified:direct",
    "test:evm": "npx hardhat test test/evm/Mailer.test.ts",
    "test:solana": "cd programs/mailer && cargo test",
    "test:unified": "mocha dist/test/unified/**/*.test.js",
    "test:unified:direct": "node scripts/run-unified-tests.mjs",
    "compile": "npm run compile:evm",
    "compile:evm": "npx hardhat compile",
    "compile:solana": "anchor build",
    "clean": "npx hardhat clean",
    "prepublishOnly": "npm run clean && npm run compile && npm run build",
    "prepack": "npm run build",
    "ai:workflow": "npx ts-node scripts/ai-helpers/dev-workflow.ts",
    "ai:status": "echo 'ü§ñ Multi-Chain Messaging Contracts AI Status' && echo 'üì¶ Package: @johnqh/mail_box_contracts v'$(node -p \"require('./package.json').version\") && echo 'üìä Architecture: Single Mailer contracts on EVM & Solana' && git status --porcelain",
    "ai:build": "echo 'üî® AI-Optimized Build Process' && npm run clean && npm run compile && npm run build && echo '‚úÖ Build Complete - Ready for Development'",
    "ai:test": "echo 'üß™ Comprehensive Test Suite' && npm test && echo 'üìä Test Summary: EVM(75) + Unified(41) = 116 tests ‚úÖ'",
    "ai:check": "echo 'üîç Quick Validation Check' && npx tsc --noEmit && npx eslint src/ test/ --ext .ts,.js && echo '‚úÖ All validation checks passed'",
    "ai:dev": "echo 'üöÄ AI Development Helper Commands:' && echo '‚Ä¢ npm run ai:status    - Check project health' && echo '‚Ä¢ npm run ai:build     - Clean build everything' && echo '‚Ä¢ npm run ai:test      - Run all 116 tests' && echo '‚Ä¢ npm run ai:check     - TypeScript + ESLint validation' && echo '‚Ä¢ npm run ai:examples  - Test all examples compile' && echo '‚Ä¢ npm run ai:docs      - Show AI documentation files' && npm run ai:status",
    "ai:examples": "echo 'üìã Testing AI Examples Compilation...' && npx tsc --noEmit --skipLibCheck examples/solana-usage.ts && npx tsc --noEmit --skipLibCheck examples/unified-usage.ts && echo '‚úÖ Solana and Unified examples compile successfully (EVM example temporarily disabled due to viem v2.37.7 compatibility)'",
    "ai:docs": "echo 'üìö AI Documentation Files:' && echo '‚Ä¢ README.md - Main project documentation' && echo '‚Ä¢ CLAUDE.md - AI assistant development guide' && echo '‚Ä¢ contracts/Mailer.sol - Single contract with all functionality' && echo '‚Ä¢ programs/mailer/ - Single Solana program' && echo '‚Ä¢ src/unified/ - Cross-chain client library' && echo '‚Ä¢ test/ - 116 comprehensive tests'",
    "lint": "eslint --ext .ts,.js .",
    "lint:fix": "eslint --ext .ts,.js . --fix",
    "typecheck": "tsc --noEmit",
    "format": "prettier --write \"**/*.{ts,js,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,js,json,md}\"",
    "security:audit": "bash scripts/security-audit.sh",
    "postinstall": "echo 'Multi-chain Mailer Contracts installed successfully!'",
    "deploy:evm:local": "npx hardhat run scripts/evm/deploy.ts --network hardhat",
    "deploy:solana:local": "anchor deploy --provider.cluster localnet",
    "deploy:solana:devnet": "anchor deploy --provider.cluster devnet",
    "deploy:solana:mainnet": "anchor deploy --provider.cluster mainnet-beta",
    "deploy:unified": "npm run deploy:evm:local && npm run deploy:solana:local",
    "deploy:evm:localhost": "npx hardhat run scripts/evm/deploy.ts --network localhost",
    "deploy:evm:mainnet": "npx hardhat run scripts/evm/deploy.ts --network mainnet",
    "deploy:evm:sepolia": "npx hardhat run scripts/evm/deploy.ts --network sepolia",
    "deploy:evm:goerli": "npx hardhat run scripts/evm/deploy.ts --network goerli",
    "deploy:evm:polygon": "npx hardhat run scripts/evm/deploy.ts --network polygon",
    "deploy:evm:mumbai": "npx hardhat run scripts/evm/deploy.ts --network mumbai",
    "deploy:evm:optimism": "npx hardhat run scripts/evm/deploy.ts --network optimism",
    "deploy:evm:optimism-goerli": "npx hardhat run scripts/evm/deploy.ts --network optimism-goerli",
    "deploy:evm:arbitrum": "npx hardhat run scripts/evm/deploy.ts --network arbitrum",
    "deploy:evm:arbitrum-goerli": "npx hardhat run scripts/evm/deploy.ts --network arbitrum-goerli",
    "deploy:evm:arbitrum-sepolia": "npx hardhat run scripts/evm/deploy.ts --network arbitrum-sepolia",
    "deploy:evm:base": "npx hardhat run scripts/evm/deploy.ts --network base",
    "deploy:evm:base-goerli": "npx hardhat run scripts/evm/deploy.ts --network base-goerli",
    "deploy:evm:base-sepolia": "npx hardhat run scripts/evm/deploy.ts --network base-sepolia",
    "deploy:evm:avalanche": "npx hardhat run scripts/evm/deploy.ts --network avalanche",
    "deploy:evm:fuji": "npx hardhat run scripts/evm/deploy.ts --network fuji",
    "deploy:evm:bsc": "npx hardhat run scripts/evm/deploy.ts --network bsc",
    "deploy:evm:bsc-testnet": "npx hardhat run scripts/evm/deploy.ts --network bscTestnet",
    "deploy:evm:fantom": "npx hardhat run scripts/evm/deploy.ts --network fantom",
    "deploy:evm:fantom-testnet": "npx hardhat run scripts/evm/deploy.ts --network fantomTestnet",
    "deploy:evm:zksync": "npx hardhat run scripts/evm/deploy.ts --network zkSync",
    "deploy:evm:zksync-testnet": "npx hardhat run scripts/evm/deploy.ts --network zkSyncTestnet",
    "deploy:evm:linea": "npx hardhat run scripts/evm/deploy.ts --network linea",
    "deploy:evm:linea-goerli": "npx hardhat run scripts/evm/deploy.ts --network linea-goerli",
    "deploy:evm:scroll": "npx hardhat run scripts/evm/deploy.ts --network scroll",
    "deploy:evm:scroll-sepolia": "npx hardhat run scripts/evm/deploy.ts --network scroll-sepolia",
    "deploy:evm:mantle": "npx hardhat run scripts/evm/deploy.ts --network mantle",
    "deploy:evm:mantle-testnet": "npx hardhat run scripts/evm/deploy.ts --network mantle-testnet",
    "deploy:evm:gnosis": "npx hardhat run scripts/evm/deploy.ts --network gnosis",
    "deploy:evm:chiado": "npx hardhat run scripts/evm/deploy.ts --network chiado",
    "deploy:evm:moonbeam": "npx hardhat run scripts/evm/deploy.ts --network moonbeam",
    "deploy:evm:moonriver": "npx hardhat run scripts/evm/deploy.ts --network moonriver",
    "deploy:evm:moonbase-alpha": "npx hardhat run scripts/evm/deploy.ts --network moonbaseAlpha",
    "deploy:evm:celo": "npx hardhat run scripts/evm/deploy.ts --network celo",
    "deploy:evm:alfajores": "npx hardhat run scripts/evm/deploy.ts --network alfajores",
    "verify:evm:mainnet": "npx hardhat run scripts/evm/verify.ts --network mainnet",
    "verify:evm:sepolia": "npx hardhat run scripts/evm/verify.ts --network sepolia",
    "verify:evm:goerli": "npx hardhat run scripts/evm/verify.ts --network goerli",
    "verify:evm:polygon": "npx hardhat run scripts/evm/verify.ts --network polygon",
    "verify:evm:mumbai": "npx hardhat run scripts/evm/verify.ts --network mumbai",
    "verify:evm:optimism": "npx hardhat run scripts/evm/verify.ts --network optimism",
    "verify:evm:optimism-goerli": "npx hardhat run scripts/evm/verify.ts --network optimism-goerli",
    "verify:evm:arbitrum": "npx hardhat run scripts/evm/verify.ts --network arbitrum",
    "verify:evm:arbitrum-goerli": "npx hardhat run scripts/evm/verify.ts --network arbitrum-goerli",
    "verify:evm:arbitrum-sepolia": "npx hardhat run scripts/evm/verify.ts --network arbitrum-sepolia",
    "verify:evm:base": "npx hardhat run scripts/evm/verify.ts --network base",
    "verify:evm:base-goerli": "npx hardhat run scripts/evm/verify.ts --network base-goerli",
    "verify:evm:base-sepolia": "npx hardhat run scripts/evm/verify.ts --network base-sepolia",
    "verify:evm:avalanche": "npx hardhat run scripts/evm/verify.ts --network avalanche",
    "verify:evm:fuji": "npx hardhat run scripts/evm/verify.ts --network fuji",
    "verify:evm:bsc": "npx hardhat run scripts/evm/verify.ts --network bsc",
    "verify:evm:bsc-testnet": "npx hardhat run scripts/evm/verify.ts --network bscTestnet",
    "verify:evm:fantom": "npx hardhat run scripts/evm/verify.ts --network fantom",
    "verify:evm:fantom-testnet": "npx hardhat run scripts/evm/verify.ts --network fantomTestnet",
    "verify:evm:linea": "npx hardhat run scripts/evm/verify.ts --network linea",
    "verify:evm:linea-goerli": "npx hardhat run scripts/evm/verify.ts --network linea-goerli",
    "verify:evm:scroll": "npx hardhat run scripts/evm/verify.ts --network scroll",
    "verify:evm:scroll-sepolia": "npx hardhat run scripts/evm/verify.ts --network scroll-sepolia",
    "verify:evm:mantle": "npx hardhat run scripts/evm/verify.ts --network mantle",
    "verify:evm:mantle-testnet": "npx hardhat run scripts/evm/verify.ts --network mantle-testnet",
    "verify:evm:gnosis": "npx hardhat run scripts/evm/verify.ts --network gnosis",
    "verify:evm:chiado": "npx hardhat run scripts/evm/verify.ts --network chiado",
    "verify:evm:moonbeam": "npx hardhat run scripts/evm/verify.ts --network moonbeam",
    "verify:evm:moonriver": "npx hardhat run scripts/evm/verify.ts --network moonriver",
    "verify:evm:moonbase-alpha": "npx hardhat run scripts/evm/verify.ts --network moonbaseAlpha",
    "verify:evm:celo": "npx hardhat run scripts/evm/verify.ts --network celo",
    "verify:evm:alfajores": "npx hardhat run scripts/evm/verify.ts --network alfajores"
  },
  "keywords": [
    "solidity",
    "rust",
    "smart-contract",
    "ethereum",
    "solana",
    "anchor",
    "multi-chain",
    "cross-chain",
    "mailer",
    "web3",
    "defi",
    "messaging",
    "usdc",
    "revenue-sharing",
    "hardhat",
    "typechain",
    "typescript"
  ],
  "author": "Mailer Team",
  "license": "MIT",
  "description": "Multi-chain decentralized messaging system with USDC fees, revenue sharing, and delegation management. Unified TypeScript client for EVM chains and Solana.",
  "homepage": "https://github.com/johnqh/mail_box_contracts#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/johnqh/mail_box_contracts.git"
  },
  "bugs": {
    "url": "https://github.com/johnqh/mail_box_contracts/issues"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=7.0.0"
  },
  "files": [
    "dist/",
    "typechain-types/",
    "artifacts/contracts/",
    "target/idl/",
    "target/types/",
    "programs/",
    "README.md",
    "LICENSE"
  ],
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org"
  },
  "devDependencies": {
    "@coral-xyz/anchor": "^0.31.1",
    "@nomicfoundation/hardhat-toolbox": "^6.1.0",
    "@types/chai": "^4.3.20",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.5.2",
    "@typescript-eslint/eslint-plugin": "^8.44.1",
    "@typescript-eslint/parser": "^8.44.1",
    "chai": "^4.5.0",
    "chai-as-promised": "^7.1.2",
    "eslint": "^9.36.0",
    "ethers": "^6.15.0",
    "hardhat": "^2.26.3",
    "mocha": "^11.7.2",
    "prettier": "^3.6.2",
    "ts-mocha": "^11.1.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@coral-xyz/anchor-cli": "^0.31.1",
    "@coral-xyz/borsh": "^0.31.1",
    "@johnqh/types": "^1.6.6",
    "@solana/spl-token": "^0.4.14",
    "@solana/web3.js": "^1.98.4",
    "@types/axios": "^0.9.36",
    "axios": "^1.12.2",
    "dotenv": "^17.2.2",
    "viem": "^2.37.7"
  },
  "overrides": {
    "bigint-buffer": "^1.1.5",
    "@solana/buffer-layout-utils": {
      "bigint-buffer": "^1.1.5"
    }
  },
  "resolutions": {
    "bigint-buffer": "^1.1.5",
    "@solana/buffer-layout-utils/bigint-buffer": "^1.1.5"
  }
}
