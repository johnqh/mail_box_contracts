{
  "permissions": {
    "allow": [
      "Bash(npm run compile:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(npm test)",
      "Bash(mkdir:*)",
      "Bash(npm init:*)",
      "Bash(npm create:*)",
      "Bash(npx create-ponder:*)",
      "Bash(npm install:*)",
      "Bash(cp:*)",
      "Bash(npm test:*)",
      "Bash(npx hardhat compile:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:docs.safe.global)",
      "Bash(npx hardhat test:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(npm run deploy:local:*)",
      "WebFetch(domain:help.safe.global)",
      "Bash(npm run clean:*)",
      "WebFetch(domain:ethgasstation.info)",
      "WebSearch",
      "Bash(npx hardhat run:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run build:*)",
      "Bash(npm audit:*)",
      "Bash(npm version:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git check-ignore:*)",
      "Bash(npm i)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/app/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/programs/mail_service/**)",
      "Read(/Users/qianghuang/mail_box_solana_contracts/target/**)",
      "Bash(anchor build)",
      "Bash(anchor:*)",
      "Bash(npm run test:solana:*)",
      "Bash(npm run test:unified:*)",
      "Bash(npx mocha test/unified/*.test.ts:*)",
      "Bash(npx ts-node:*)",
      "Bash(git checkout:*)",
      "Bash(npm run test:evm:*)",
      "Bash(npm update)",
      "Bash(chmod:*)",
      "Bash(npm run:*)",
      "Bash(npx mocha test:*)",
      "Bash(npx hardhat node:*)",
      "Bash(cat:*)",
      "Bash(npx mocha:*)",
      "Bash(npm outdated)",
      "Bash(npm update:*)",
      "Bash(npm view:*)",
      "Bash(if [ -f SECURITY.md ])",
      "Bash(then)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(./test-ci-audit.sh:*)",
      "Bash(solana:*)",
      "Bash(/Users/qianghuang/.cargo/bin/anchor build)",
      "Bash(npx anchor-cli:*)",
      "Bash(cargo uninstall:*)",
      "Read(/Users/qianghuang/.cargo/bin/**)",
      "Bash(/Users/qianghuang/.cargo/bin/anchor --version)",
      "Bash(cargo install:*)",
      "Bash(cargo build-sbf:*)",
      "Bash(/Users/qianghuang/.cargo/bin/anchor build --skip-lint)",
      "Bash(/Users/qianghuang/.cargo/bin/anchor deploy --provider.cluster devnet)",
      "Bash(rustup:*)",
      "Bash(rustc --version)",
      "Bash(source:*)",
      "Bash(avm install:*)",
      "Bash(avm use:*)",
      "Bash(cargo:*)",
      "Bash(avm list:*)",
      "Bash(RUSTFLAGS=\"-Z next-lockfile-bump\" /Users/qianghuang/.cargo/bin/anchor build --skip-lint)",
      "Bash(RUSTFLAGS=\"-Z next-lockfile-bump\" cargo build-sbf --manifest-path programs/mail_service/Cargo.toml)",
      "Bash(~/.cargo/bin/anchor:*)",
      "Bash(RUSTFLAGS=\"-Z next-lockfile-bump\" cargo generate-lockfile)",
      "Bash(RUSTFLAGS=\"-Z next-lockfile-bump\" ~/.cargo/bin/anchor build --skip-lint)",
      "Bash(npm uninstall:*)",
      "Bash(RUSTFLAGS=\"-Z next-lockfile-bump\" cargo build-sbf --manifest-path programs/mailer/Cargo.toml)",
      "Bash(ANCHOR_PROVIDER_URL=http://localhost:8899 ANCHOR_WALLET=/dev/null ~/.cargo/bin/anchor build --skip-lint)",
      "Bash(npx hardhat clean:*)",
      "mcp__ide__getDiagnostics",
      "Bash(tsc --project tsconfig.json)",
      "Bash(git tag:*)",
      "Bash(npm:*)",
      "Bash(tsc:*)",
      "Read(//Users/qianghuang/types/**)",
      "Read(//Users/johnhuang/0xmail/types/**)",
      "Bash(NODE_OPTIONS=\"--loader ts-node/esm\" npx mocha test/unified/*.test.ts)",
      "Bash(TS_NODE_PROJECT=tsconfig.test.json npx mocha test/unified/*.test.ts)",
      "Bash(TS_NODE_PROJECT=tsconfig.test.json npm run test:unified:direct)",
      "Bash(NODE_OPTIONS=\"--loader ts-node/esm\" npx mocha test/unified/*.test.ts --timeout 10000)",
      "Bash(TS_NODE_PROJECT=tsconfig.test.json npx mocha test/unified/validation.test.ts)",
      "Bash(__NEW_LINE__ echo \"Testing ESM build...\")",
      "Bash(git stash:*)",
      "Bash(curl -s \"https://api-sepolia.etherscan.io/api?module=contract&action=getcontractcreation&contractaddresses=0x4CF25f4683f0C64deDF9F9368Bebe8159740335A&apikey=$ETHERSCAN_MULTICHAIN_API_KEY\")",
      "Bash(python3:*)",
      "Bash(curl -s \"https://api-sepolia.etherscan.io/api?module=contract&action=getcontractcreation&contractaddresses=0x4CF25f4683f0C64deDF9F9368Bebe8159740335A&apikey=QIY73MZ95W5FNITI8ACS9181MXY3VU22PY\")",
      "Bash(curl -s \"https://api-sepolia.etherscan.io/api?module=contract&action=getcontractcreation&contractaddresses=0x9734687BB7b1F842E8b0665641B06ED752703D42&apikey=QIY73MZ95W5FNITI8ACS9181MXY3VU22PY\")",
      "Bash(curl -s \"https://api-sepolia.etherscan.io/api?module=contract&action=getcontractcreation&contractaddresses=0x13fC7Fe676E4FaaE8F4D910d8Ed7fbD3FebDbe88&apikey=$ETHERSCAN_MULTICHAIN_API_KEY\")",
      "Bash(CONTRACT_ADDRESS=0x13fC7Fe676E4FaaE8F4D910d8Ed7fbD3FebDbe88 npx hardhat run scripts/evm/get-deployment-block.ts --network sepolia)",
      "Bash(./scripts/evm/find-deployment-block.sh:*)",
      "Bash(git log:*)",
      "Bash(curl -s \"https://api-sepolia.etherscan.io/api?module=contract&action=getcontractcreation&contractaddresses=0xd94938f1985E99b9Df2C7375b6ca5857cB06F39A&apikey=$ETHERSCAN_MULTICHAIN_API_KEY\")",
      "Bash(CONTRACT_ADDRESS=0xd94938f1985E99b9Df2C7375b6ca5857cB06F39A npx hardhat run scripts/evm/get-deployment-block.ts --network sepolia)",
      "Read(//Users/johnhuang/0xmail/wildduck_client/.github/workflows/**)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}
