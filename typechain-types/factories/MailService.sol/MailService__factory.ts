/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MailService,
  MailServiceInterface,
} from "../../MailService.sol/MailService";

const _abi = [
  {
    inputs: [],
    name: "NotASafeWallet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "DelegationCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "DelegationSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "delegateTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "getDelegatedAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638ce70c681461003b578063ac637c7a1461006b575b600080fd5b610055600480360381019061005091906103f4565b610087565b6040516100629190610430565b60405180910390f35b610085600480360381019061008091906103f4565b6100ef565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6100f8336102e6565b61012e576040517f1616e4d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361020b576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690553373ffffffffffffffffffffffffffffffffffffffff167f523886ce650fe884659b1bdfd3ba0f5d4b3207220aff78bfa9bdd347c6e22a3260405160405180910390a26102e3565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f39e3ace752997a751bda5ecf126da84d0d23d5e61f3f56f26a6b22990d7beed860405160405180910390a35b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b0361030f576000905061038c565b8173ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561037757506040513d601f19601f820116820180604052508101906103749190610481565b60015b610384576000905061038c565b600081119150505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c182610396565b9050919050565b6103d1816103b6565b81146103dc57600080fd5b50565b6000813590506103ee816103c8565b92915050565b60006020828403121561040a57610409610391565b5b6000610418848285016103df565b91505092915050565b61042a816103b6565b82525050565b60006020820190506104456000830184610421565b92915050565b6000819050919050565b61045e8161044b565b811461046957600080fd5b50565b60008151905061047b81610455565b92915050565b60006020828403121561049757610496610391565b5b60006104a58482850161046c565b9150509291505056fea264697066735822122020299861c3b8af2e106c9bd3be565d6d2b918c170dd9d207b14d5b56619f035664736f6c63430008180033";

type MailServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MailServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MailService__factory extends ContractFactory {
  constructor(...args: MailServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MailService & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MailService__factory {
    return super.connect(runner) as MailService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MailServiceInterface {
    return new Interface(_abi) as MailServiceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MailService {
    return new Contract(address, _abi, runner) as unknown as MailService;
  }
}
