/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MailService,
  MailServiceInterface,
} from "../../MailService.sol/MailService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyDomain",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "DelegationCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "DelegationFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "DelegationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExpiration",
        type: "uint256",
      },
    ],
    name: "DomainExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "DomainRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registrar",
        type: "address",
      },
    ],
    name: "DomainReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "RegistrationFeeUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "delegateTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delegationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDelegationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isExtension",
        type: "bool",
      },
    ],
    name: "registerDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "releaseRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "setDelegationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040526305f5e1006000556298968060015534801561001f57600080fd5b50604051610ddb380380610ddb83398181016040528101906100419190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b60805160a051610c5b610180600039600081816101f901528181610391015261055f0152600081816102820152818161052f01526106e50152610c5b6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635d0955c3116100715780635d0955c3146101405780638da5cb5b1461015c5780639ded51dd1461017a578063ac637c7a14610198578063c320c727146101b4578063c5f0a58f146101d0576100a9565b80630946e807146100ae57806311eac855146100cc57806314c44e09146100ea57806337c2cf361461010857806355bfc81c14610124575b600080fd5b6100b66101ee565b6040516100c391906107d1565b60405180910390f35b6100d46101f7565b6040516100e1919061086b565b60405180910390f35b6100f261021b565b6040516100ff91906107d1565b60405180910390f35b610122600480360381019061011d91906108f5565b610221565b005b61013e6004803603810190610139919061096e565b610280565b005b61015a600480360381019061015591906109d3565b610350565b005b61016461052d565b6040516101719190610a54565b60405180910390f35b610182610551565b60405161018f91906107d1565b60405180910390f35b6101b260048036038101906101ad9190610a9b565b61055b565b005b6101ce60048036038101906101c9919061096e565b6106e3565b005b6101d86107b2565b6040516101e591906107d1565b60405180910390f35b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b3373ffffffffffffffffffffffffffffffffffffffff168282604051610248929190610b07565b60405180910390207f89618b0646e4bd0e3a45e0ec3270d4ce667fb0eef8534d88758b5763e40f421a60405160405180910390a35050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610305576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001549050816001819055507f83b05743f1284b2faed08b3f927951e6663e5277e09a40c939f0dfe5075af7788183604051610344929190610b20565b60405180910390a15050565b6000838390500361038d576040517f9f13c33600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33306000546040518463ffffffff1660e01b81526004016103ee93929190610b49565b6020604051808303816000875af115801561040d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104319190610b95565b905080156105275760006301e133804261044b9190610bf1565b905082156104be573373ffffffffffffffffffffffffffffffffffffffff16858560405161047a929190610b07565b60405180910390207f86b6228090f3efa4346bcfcf035b083328ff05692bac43379de817ed082388d3836040516104b191906107d1565b60405180910390a3610525565b3373ffffffffffffffffffffffffffffffffffffffff1685856040516104e5929190610b07565b60405180910390207f19b32006d377795e50309cbfef6336edf2dac8a41b8aa40093296ca5489b4d678360405161051c91906107d1565b60405180910390a35b505b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600154905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33306001546040518463ffffffff1660e01b81526004016105bc93929190610b49565b6020604051808303816000875af11580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190610b95565b905080156106df57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610683573373ffffffffffffffffffffffffffffffffffffffff167f523886ce650fe884659b1bdfd3ba0f5d4b3207220aff78bfa9bdd347c6e22a3260405160405180910390a26106de565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f39e3ace752997a751bda5ecf126da84d0d23d5e61f3f56f26a6b22990d7beed860405160405180910390a35b5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610768576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080549050816000819055507f50b218c5a101ad05d53ab0a964d01da639ee79525ae4b7802ed714249740a8d581836040516107a6929190610b20565b60405180910390a15050565b60015481565b6000819050919050565b6107cb816107b8565b82525050565b60006020820190506107e660008301846107c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061083161082c610827846107ec565b61080c565b6107ec565b9050919050565b600061084382610816565b9050919050565b600061085582610838565b9050919050565b6108658161084a565b82525050565b6000602082019050610880600083018461085c565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126108b5576108b4610890565b5b8235905067ffffffffffffffff8111156108d2576108d1610895565b5b6020830191508360018202830111156108ee576108ed61089a565b5b9250929050565b6000806020838503121561090c5761090b610886565b5b600083013567ffffffffffffffff81111561092a5761092961088b565b5b6109368582860161089f565b92509250509250929050565b61094b816107b8565b811461095657600080fd5b50565b60008135905061096881610942565b92915050565b60006020828403121561098457610983610886565b5b600061099284828501610959565b91505092915050565b60008115159050919050565b6109b08161099b565b81146109bb57600080fd5b50565b6000813590506109cd816109a7565b92915050565b6000806000604084860312156109ec576109eb610886565b5b600084013567ffffffffffffffff811115610a0a57610a0961088b565b5b610a168682870161089f565b93509350506020610a29868287016109be565b9150509250925092565b6000610a3e826107ec565b9050919050565b610a4e81610a33565b82525050565b6000602082019050610a696000830184610a45565b92915050565b610a7881610a33565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600060208284031215610ab157610ab0610886565b5b6000610abf84828501610a86565b91505092915050565b600081905092915050565b82818337600083830152505050565b6000610aee8385610ac8565b9350610afb838584610ad3565b82840190509392505050565b6000610b14828486610ae2565b91508190509392505050565b6000604082019050610b3560008301856107c2565b610b4260208301846107c2565b9392505050565b6000606082019050610b5e6000830186610a45565b610b6b6020830185610a45565b610b7860408301846107c2565b949350505050565b600081519050610b8f816109a7565b92915050565b600060208284031215610bab57610baa610886565b5b6000610bb984828501610b80565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bfc826107b8565b9150610c07836107b8565b9250828201905080821115610c1f57610c1e610bc2565b5b9291505056fea2646970667358221220ddcebd9e505bb9dae4969e78bee4c859bd32938ff1ee5378acd55461ffd1915964736f6c63430008180033";

type MailServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MailServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MailService__factory extends ContractFactory {
  constructor(...args: MailServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      MailService & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MailService__factory {
    return super.connect(runner) as MailService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MailServiceInterface {
    return new Interface(_abi) as MailServiceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MailService {
    return new Contract(address, _abi, runner) as unknown as MailService;
  }
}
