/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SafeChecker,
  SafeCheckerInterface,
} from "../../SafeChecker.sol/SafeChecker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSafeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ownerCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValidSafe",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "safeAccount",
        type: "address",
      },
      {
        internalType: "address",
        name: "potentialOwner",
        type: "address",
      },
    ],
    name: "isOwnerOfSafe",
    outputs: [
      {
        internalType: "bool",
        name: "isOwner",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isSafe",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b0e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063186c8a6d14610046578063769a28ac14610076578063d027f464146100a6575b600080fd5b610060600480360381019061005b91906106c0565b6100d8565b60405161006d919061071b565b60405180910390f35b610090600480360381019061008b9190610736565b6101ec565b60405161009d919061071b565b60405180910390f35b6100c060048036038101906100bb9190610736565b6104c7565b6040516100cf9392919061077c565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1663769a28ac846040518263ffffffff1660e01b815260040161011391906107c2565b602060405180830381865afa158015610130573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101549190610809565b61016157600090506101e6565b8273ffffffffffffffffffffffffffffffffffffffff16632f54bf6e836040518263ffffffff1660e01b815260040161019a91906107c2565b602060405180830381865afa9250505080156101d457506040513d601f19601f820116820180604052508101906101d19190610809565b60015b6101e157600090506101e6565b809150505b92915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b0361021557600090506104c2565b8173ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561027d57506040513d601f19601f8201168201806040525081019061027a9190610862565b60015b61028a57600090506104c2565b6000810361029c5760009150506104c2565b8273ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa92505050801561030957506040513d6000823e3d601f19601f8201168201806040525081019061030691906109fd565b60015b6103175760009150506104c2565b600081510361032b576000925050506104c2565b805182111561033f576000925050506104c2565b6000805b82518110156103b057600073ffffffffffffffffffffffffffffffffffffffff1683828151811061037757610376610a46565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16146103a357600191506103b0565b8080600101915050610343565b50806103c257600093505050506104c2565b8473ffffffffffffffffffffffffffffffffffffffff1663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561042a57506040513d601f19601f820116820180604052508101906104279190610862565b60015b61043a57600093505050506104c2565b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156104a257506040513d601f19601f8201168201806040525081019061049f9190610aab565b60015b6104b35760019450505050506104c2565b6000801b811415955050505050505b919050565b60008060003073ffffffffffffffffffffffffffffffffffffffff1663769a28ac856040518263ffffffff1660e01b815260040161050591906107c2565b602060405180830381865afa158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190610809565b61055a576000806000925092509250610647565b8373ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190610862565b92508373ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061063f91906109fd565b519150600190505b9193909250565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061068d82610662565b9050919050565b61069d81610682565b81146106a857600080fd5b50565b6000813590506106ba81610694565b92915050565b600080604083850312156106d7576106d6610658565b5b60006106e5858286016106ab565b92505060206106f6858286016106ab565b9150509250929050565b60008115159050919050565b61071581610700565b82525050565b6000602082019050610730600083018461070c565b92915050565b60006020828403121561074c5761074b610658565b5b600061075a848285016106ab565b91505092915050565b6000819050919050565b61077681610763565b82525050565b6000606082019050610791600083018661076d565b61079e602083018561076d565b6107ab604083018461070c565b949350505050565b6107bc81610682565b82525050565b60006020820190506107d760008301846107b3565b92915050565b6107e681610700565b81146107f157600080fd5b50565b600081519050610803816107dd565b92915050565b60006020828403121561081f5761081e610658565b5b600061082d848285016107f4565b91505092915050565b61083f81610763565b811461084a57600080fd5b50565b60008151905061085c81610836565b92915050565b60006020828403121561087857610877610658565b5b60006108868482850161084d565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108dd82610894565b810181811067ffffffffffffffff821117156108fc576108fb6108a5565b5b80604052505050565b600061090f61064e565b905061091b82826108d4565b919050565b600067ffffffffffffffff82111561093b5761093a6108a5565b5b602082029050602081019050919050565b600080fd5b60008151905061096081610694565b92915050565b600061097961097484610920565b610905565b9050808382526020820190506020840283018581111561099c5761099b61094c565b5b835b818110156109c557806109b18882610951565b84526020840193505060208101905061099e565b5050509392505050565b600082601f8301126109e4576109e361088f565b5b81516109f4848260208601610966565b91505092915050565b600060208284031215610a1357610a12610658565b5b600082015167ffffffffffffffff811115610a3157610a3061065d565b5b610a3d848285016109cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b610a8881610a75565b8114610a9357600080fd5b50565b600081519050610aa581610a7f565b92915050565b600060208284031215610ac157610ac0610658565b5b6000610acf84828501610a96565b9150509291505056fea264697066735822122000bb30201cb6b1254efbfce46af4237fe5b83ff59ed1f6692bb30824b7dccbab64736f6c63430008180033";

type SafeCheckerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeCheckerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeChecker__factory extends ContractFactory {
  constructor(...args: SafeCheckerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SafeChecker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SafeChecker__factory {
    return super.connect(runner) as SafeChecker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeCheckerInterface {
    return new Interface(_abi) as SafeCheckerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SafeChecker {
    return new Contract(address, _abi, runner) as unknown as SafeChecker;
  }
}
