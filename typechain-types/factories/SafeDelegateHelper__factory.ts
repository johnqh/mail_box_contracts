/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SafeDelegateHelper,
  SafeDelegateHelperInterface,
} from "../SafeDelegateHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mailService",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMyDomains",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mailService",
    outputs: [
      {
        internalType: "contract MailService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "testDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "testDomainRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600260015534801561001557600080fd5b50604051610b0b380380610b0b833981810160405281019061003791906100e0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ad82610082565b9050919050565b6100bd816100a2565b81146100c857600080fd5b50565b6000815190506100da816100b4565b92915050565b6000602082840312156100f6576100f561007d565b5b6000610104848285016100cb565b91505092915050565b6109ef8061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630f98a87914610067578063617ef8b314610085578063960bfe04146100a1578063c6c427bb146100bd578063e6d4958b146100d9578063e75235b8146100f7575b600080fd5b61006f610115565b60405161007c9190610386565b60405180910390f35b61009f600480360381019061009a91906103f3565b610139565b005b6100bb60048036038101906100b69190610456565b6101c7565b005b6100d760048036038101906100d291906104e8565b6101d1565b005b6100e1610262565b6040516100ee9190610687565b60405180910390f35b6100ff6102fd565b60405161010c91906106b8565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ac637c7a826040518263ffffffff1660e01b815260040161019291906106e2565b600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505050565b8060018190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5cad08a83836040518363ffffffff1660e01b815260040161022c92919061074a565b600060405180830381600087803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b505050505050565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639101cc656040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102f89190610970565b905090565b6000600154905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061034c61034761034284610307565b610327565b610307565b9050919050565b600061035e82610331565b9050919050565b600061037082610353565b9050919050565b61038081610365565b82525050565b600060208201905061039b6000830184610377565b92915050565b6000604051905090565b600080fd5b600080fd5b60006103c082610307565b9050919050565b6103d0816103b5565b81146103db57600080fd5b50565b6000813590506103ed816103c7565b92915050565b600060208284031215610409576104086103ab565b5b6000610417848285016103de565b91505092915050565b6000819050919050565b61043381610420565b811461043e57600080fd5b50565b6000813590506104508161042a565b92915050565b60006020828403121561046c5761046b6103ab565b5b600061047a84828501610441565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104a8576104a7610483565b5b8235905067ffffffffffffffff8111156104c5576104c4610488565b5b6020830191508360018202830111156104e1576104e061048d565b5b9250929050565b600080602083850312156104ff576104fe6103ab565b5b600083013567ffffffffffffffff81111561051d5761051c6103b0565b5b61052985828601610492565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561059b578082015181840152602081019050610580565b60008484015250505050565b6000601f19601f8301169050919050565b60006105c382610561565b6105cd818561056c565b93506105dd81856020860161057d565b6105e6816105a7565b840191505092915050565b60006105fd83836105b8565b905092915050565b6000602082019050919050565b600061061d82610535565b6106278185610540565b93508360208202850161063985610551565b8060005b85811015610675578484038952815161065685826105f1565b945061066183610605565b925060208a0199505060018101905061063d565b50829750879550505050505092915050565b600060208201905081810360008301526106a18184610612565b905092915050565b6106b281610420565b82525050565b60006020820190506106cd60008301846106a9565b92915050565b6106dc816103b5565b82525050565b60006020820190506106f760008301846106d3565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b600061072983856106fd565b935061073683858461070e565b61073f836105a7565b840190509392505050565b6000602082019050818103600083015261076581848661071d565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107a6826105a7565b810181811067ffffffffffffffff821117156107c5576107c461076e565b5b80604052505050565b60006107d86103a1565b90506107e4828261079d565b919050565b600067ffffffffffffffff8211156108045761080361076e565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff8211156108355761083461076e565b5b61083e826105a7565b9050602081019050919050565b600061085e6108598461081a565b6107ce565b90508281526020810184848401111561087a57610879610815565b5b61088584828561057d565b509392505050565b600082601f8301126108a2576108a1610483565b5b81516108b284826020860161084b565b91505092915050565b60006108ce6108c9846107e9565b6107ce565b905080838252602082019050602084028301858111156108f1576108f061048d565b5b835b8181101561093857805167ffffffffffffffff81111561091657610915610483565b5b808601610923898261088d565b855260208501945050506020810190506108f3565b5050509392505050565b600082601f83011261095757610956610483565b5b81516109678482602086016108bb565b91505092915050565b600060208284031215610986576109856103ab565b5b600082015167ffffffffffffffff8111156109a4576109a36103b0565b5b6109b084828501610942565b9150509291505056fea26469706673582212208237401218fed4f0295cf8bd304a92f38138ce37e4d4fd037b430d58a94f594d64736f6c63430008180033";

type SafeDelegateHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeDelegateHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeDelegateHelper__factory extends ContractFactory {
  constructor(...args: SafeDelegateHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _mailService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_mailService, overrides || {});
  }
  override deploy(
    _mailService: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_mailService, overrides || {}) as Promise<
      SafeDelegateHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SafeDelegateHelper__factory {
    return super.connect(runner) as SafeDelegateHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeDelegateHelperInterface {
    return new Interface(_abi) as SafeDelegateHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SafeDelegateHelper {
    return new Contract(address, _abi, runner) as unknown as SafeDelegateHelper;
  }
}
