/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MailBox, MailBoxInterface } from "../../MailBox.sol/MailBox";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "MailSent",
    type: "event",
  },
  {
    inputs: [],
    name: "SEND_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106a33803806106a3833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161058661011d6000396000818160a101526101c101526105866000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c806205ba7f1461004557806311eac85514610061578063149e78d81461007f575b600080fd5b61005f600480360381019061005a91906102b7565b61009d565b005b6100696101bf565b60405161007691906103bd565b60405180910390f35b6100876101e3565b60405161009491906103f1565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8830620186a06040518463ffffffff1660e01b81526004016100ff9392919061041b565b6020604051808303816000875af115801561011e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610142919061048a565b905080156101b6578573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f17dd1c2bbad2c19fa9e0e34253e73d5f9902484fc1f967c67dd7ae681c9e4db3878787876040516101ad9493929190610515565b60405180910390a35b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b620186a081565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061021f826101f4565b9050919050565b61022f81610214565b811461023a57600080fd5b50565b60008135905061024c81610226565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261027757610276610252565b5b8235905067ffffffffffffffff81111561029457610293610257565b5b6020830191508360018202830111156102b0576102af61025c565b5b9250929050565b600080600080600080608087890312156102d4576102d36101ea565b5b60006102e289828a0161023d565b96505060206102f389828a0161023d565b955050604087013567ffffffffffffffff811115610314576103136101ef565b5b61032089828a01610261565b9450945050606087013567ffffffffffffffff811115610343576103426101ef565b5b61034f89828a01610261565b92509250509295509295509295565b6000819050919050565b600061038361037e610379846101f4565b61035e565b6101f4565b9050919050565b600061039582610368565b9050919050565b60006103a78261038a565b9050919050565b6103b78161039c565b82525050565b60006020820190506103d260008301846103ae565b92915050565b6000819050919050565b6103eb816103d8565b82525050565b600060208201905061040660008301846103e2565b92915050565b61041581610214565b82525050565b6000606082019050610430600083018661040c565b61043d602083018561040c565b61044a60408301846103e2565b949350505050565b60008115159050919050565b61046781610452565b811461047257600080fd5b50565b6000815190506104848161045e565b92915050565b6000602082840312156104a05761049f6101ea565b5b60006104ae84828501610475565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006104f483856104b7565b93506105018385846104c8565b61050a836104d7565b840190509392505050565b600060408201905081810360008301526105308186886104e8565b905081810360208301526105458184866104e8565b90509594505050505056fea2646970667358221220d45dce75d892ab2ab5faceea2ecee703ac16a3c0f5181e7d6d73b5fe18b7849f64736f6c63430008180033";

type MailBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MailBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MailBox__factory extends ContractFactory {
  constructor(...args: MailBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      MailBox & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MailBox__factory {
    return super.connect(runner) as MailBox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MailBoxInterface {
    return new Interface(_abi) as MailBoxInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MailBox {
    return new Contract(address, _abi, runner) as unknown as MailBox;
  }
}
