/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Mailer, MailerInterface } from "../../Mailer.sol/Mailer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ClaimPeriodNotExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "FeePaymentRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MathOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "NoClaimableAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuard",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ExpiredSharesClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "MailSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "OwnerClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "PreparedMailSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RecipientClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recipientAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerAmount",
        type: "uint256",
      },
    ],
    name: "SharesRecorded",
    type: "event",
  },
  {
    inputs: [],
    name: "CLAIM_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER_SHARE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RECIPIENT_SHARE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimExpiredShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnerShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRecipientShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getRecipientClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isExpired",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recipientClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "sendPrepared",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "sendPriority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "sendPriorityPrepared",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052620186a060005534801561001757600080fd5b50604051611253380380611253833981016040819052610036916100a4565b6001600160a01b038216158061005357506001600160a01b038116155b156100715760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b039182166080521660a0526100d7565b80516001600160a01b038116811461009f57600080fd5b919050565b600080604083850312156100b757600080fd5b6100c083610088565b91506100ce60208401610088565b90509250929050565b60805160a051611111610142600039600081816101ed01528181610409015281816104b30152818161087a015261090801526000818161012b0152818161030d015281816104e5015281816106670152818161077e01528181610a9c0152610c4801526111116000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063cd564ccd11610071578063cd564ccd1461026f578063ced72f871461029f578063d1578687146102a7578063efd1fe02146102af578063f2292f09146102c257600080fd5b80638da5cb5b146101e85780638db3c5fd1461020f578063a3a336bf14610217578063ae39279f14610253578063bd6de11c1461025c57600080fd5b80634b0b1b8b116100f45780634b0b1b8b1461019f5780635fbb4ce1146101a757806369fe0e2d146101ba5780636a1c6e78146101cd578063720e586f146101d557600080fd5b806311eac8551461012657806320355f9b1461016a57806321241dfe1461017f578063358cbf0a14610197575b600080fd5b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61017d610178366004610eb8565b6102cb565b005b610189624f1a0081565b604051908152602001610161565b61017d6103fe565b61017d6105ae565b61017d6101b5366004610efa565b61073c565b61017d6101c8366004610f66565b61086f565b610189600a81565b61017d6101e3366004610f7f565b6108fd565b61014d7f000000000000000000000000000000000000000000000000000000000000000081565b610189605a81565b61023e610225366004610f7f565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610161565b61018960005481565b61017d61026a366004610efa565b610a3d565b61028261027d366004610f7f565b610b9a565b604080519384526020840192909252151590820152606001610161565b600054610189565b600254610189565b61017d6102bd366004610eb8565b610be9565b61018960025481565b6003546001036102ee576040516345f5ce8b60e11b815260040160405180910390fd5b60016003556000546040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91610345913391309190600401610faf565b6020604051808303816000875af1158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190610fd3565b6103a557604051634aa23e8f60e11b815260040160405180910390fd5b6103b133600054610d46565b81816040516103c1929190610ff5565b60405190819003812090339081907f55e3c037c53937e37dd5733a6825c3c4290211d7e5de4f1738259b5d59fb1b7b90600090a450506000600355565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461044757604051635fc483c560e01b815260040160405180910390fd5b60035460010361046a576040516345f5ce8b60e11b815260040160405180910390fd5b60016003556002546000036104925760405163493c1ab760e01b815260040160405180910390fd5b6002805460009182905560405163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390529192917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190610fd3565b905080610572576040516312171d8360e31b815260040160405180910390fd5b6040518281527f81521279371b94892737e5e06851c322303c72e5493db1453314ea08f55cb9379060200160405180910390a150506000600355565b6003546001036105d1576040516345f5ce8b60e11b815260040160405180910390fd5b6001600381905533600090815260209190915260408120805490910361060a5760405163493c1ab760e01b815260040160405180910390fd5b624f1a00816001015461061d919061101b565b42111561063d5760405163493c1ab760e01b815260040160405180910390fd5b805460008083556001830181905560405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610fd3565b9050806106fc576040516312171d8360e31b815260040160405180910390fd5b60405182815233907f6673747791df7fe01578fcaebe4082d6d7680f052dbdd7d2cf345f88121be421906020015b60405180910390a25050600060035550565b60035460010361075f576040516345f5ce8b60e11b815260040160405180910390fd5b60016003556000546040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916107b6913391309190600401610faf565b6020604051808303816000875af11580156107d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f99190610fd3565b61081657604051634aa23e8f60e11b815260040160405180910390fd5b61082233600054610d46565b604051339081907f17dd1c2bbad2c19fa9e0e34253e73d5f9902484fc1f967c67dd7ae681c9e4db39061085c90889088908890889061105d565b60405180910390a3505060006003555050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108b857604051635fc483c560e01b815260040160405180910390fd5b600080549082905560408051828152602081018490527f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302910160405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461094657604051635fc483c560e01b815260040160405180910390fd5b600354600103610969576040516345f5ce8b60e11b815260040160405180910390fd5b600160038190556001600160a01b03821660009081526020919091526040812080549091036109ab5760405163493c1ab760e01b815260040160405180910390fd5b624f1a0081600101546109be919061101b565b42116109dd576040516326f6703f60e11b815260040160405180910390fd5b8054600080835560018301819055600280548392906109fd90849061101b565b90915550506040518181526001600160a01b038416907fb4572b7f0782a4b7672a2341d00e4f1a0af99d81a3f8e959f25ff679eb3144819060200161072a565b600354600103610a60576040516345f5ce8b60e11b815260040160405180910390fd5b600160035560008054606490610a7890600a9061108f565b610a8291906110a6565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90610ad590339030908690600401610faf565b6020604051808303816000875af1158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190610fd3565b610b3557604051634aa23e8f60e11b815260040160405180910390fd5b8060026000828254610b47919061101b565b9091555050604051339081907f17dd1c2bbad2c19fa9e0e34253e73d5f9902484fc1f967c67dd7ae681c9e4db390610b8690899089908990899061105d565b60405180910390a350506000600355505050565b6001600160a01b03811660009081526001602081905260408220805491810154919291829190610bce90624f1a009061101b565b815490935015801590610be057508242115b93959294505050565b600354600103610c0c576040516345f5ce8b60e11b815260040160405180910390fd5b600160035560008054606490610c2490600a9061108f565b610c2e91906110a6565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90610c8190339030908690600401610faf565b6020604051808303816000875af1158015610ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc49190610fd3565b610ce157604051634aa23e8f60e11b815260040160405180910390fd5b8060026000828254610cf3919061101b565b9091555050604051610d089084908490610ff5565b60405190819003812090339081907f55e3c037c53937e37dd5733a6825c3c4290211d7e5de4f1738259b5d59fb1b7b90600090a45050600060035550565b610d53605a6000196110a6565b811115610d7357604051634eab2ea760e11b815260040160405180910390fd5b60006064610d82600a8461108f565b610d8c91906110a6565b90506000610d9a82846110c8565b6001600160a01b038516600090815260016020526040812080549293508392909190610dc790849061101b565b90915550506001600160a01b0384166000908152600160208190526040822001549003610e0e576001600160a01b0384166000908152600160208190526040909120429101555b8160026000828254610e20919061101b565b909155505060408051828152602081018490526001600160a01b038616917fad83ccf4aebaf9db0cc5658b24e378a4a865a51b863e0289e3ee0e4947d97b1c910160405180910390a250505050565b60008083601f840112610e8157600080fd5b50813567ffffffffffffffff811115610e9957600080fd5b602083019150836020828501011115610eb157600080fd5b9250929050565b60008060208385031215610ecb57600080fd5b823567ffffffffffffffff811115610ee257600080fd5b610eee85828601610e6f565b90969095509350505050565b60008060008060408587031215610f1057600080fd5b843567ffffffffffffffff80821115610f2857600080fd5b610f3488838901610e6f565b90965094506020870135915080821115610f4d57600080fd5b50610f5a87828801610e6f565b95989497509550505050565b600060208284031215610f7857600080fd5b5035919050565b600060208284031215610f9157600080fd5b81356001600160a01b0381168114610fa857600080fd5b9392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610fe557600080fd5b81518015158114610fa857600080fd5b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561102e5761102e611005565b92915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000611071604083018688611034565b8281036020840152611084818587611034565b979650505050505050565b808202811582820484141761102e5761102e611005565b6000826110c357634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561102e5761102e61100556fea2646970667358221220f5e1fdc8e903ec84595f9d9f8252e05521af260d05e76d71cdd773deee03c4a464736f6c63430008180033";

type MailerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MailerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mailer__factory extends ContractFactory {
  constructor(...args: MailerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, _owner, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, _owner, overrides || {}) as Promise<
      Mailer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mailer__factory {
    return super.connect(runner) as Mailer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MailerInterface {
    return new Interface(_abi) as MailerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Mailer {
    return new Contract(address, _abi, runner) as unknown as Mailer;
  }
}
