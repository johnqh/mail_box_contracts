/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MailBoxFactory,
  MailBoxFactoryInterface,
} from "../MailBoxFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contractType",
        type: "string",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "bytecodes",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "salts",
        type: "bytes32[]",
      },
      {
        internalType: "string[]",
        name: "contractTypes",
        type: "string[]",
      },
    ],
    name: "batchDeploy",
    outputs: [
      {
        internalType: "address[]",
        name: "deployedAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "contractType",
        type: "string",
      },
    ],
    name: "deployContract",
    outputs: [
      {
        internalType: "address",
        name: "deployedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractType",
        type: "string",
      },
    ],
    name: "generateSalt",
    outputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "getCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "isContractDeployed",
    outputs: [
      {
        internalType: "bool",
        name: "isDeployed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "predictAddress",
    outputs: [
      {
        internalType: "address",
        name: "predicted",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806323fa9e431461006757806354b2d2081461009057806374366951146100bb57806379d0e6a3146100dc5780638a64635614610148578063f20751eb14610161575b600080fd5b61007a6100753660046105cb565b610185565b60405161008791906106c3565b60405180910390f35b6100a361009e366004610710565b61036a565b6040516001600160a01b039091168152602001610087565b6100ce6100c9366004610773565b6103cb565b604051908152602001610087565b6100a36100ea3660046107fc565b8251602093840120604080516001600160f81b03198187015260609390931b6bffffffffffffffffffffffff191660218401526035830193909352605580830191909152825180830390910181526075909101909152805191012090565b6100ce610156366004610857565b805160209091012090565b61017561016f366004610894565b3b151590565b6040519015158152602001610087565b606082518451146101d65760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064015b60405180910390fd5b81518451146102205760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016101cd565b835167ffffffffffffffff81111561023a5761023a610401565b604051908082528060200260200182016040528015610263578160200160208202803683370190505b50905060005b845181101561036257306001600160a01b03166354b2d208868381518110610293576102936108b8565b60200260200101518684815181106102ad576102ad6108b8565b60200260200101518685815181106102c7576102c76108b8565b60200260200101516040518463ffffffff1660e01b81526004016102ed9392919061091e565b6020604051808303816000875af115801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610953565b828281518110610342576103426108b8565b6001600160a01b0390921660209283029190910190910152600101610269565b509392505050565b6000828451602086016000f590508061038257600080fd5b82816001600160a01b03167f5aa6b6f208872572cb5c6c099b29219fb308cc012feffda4a234756507c59cd6846040516103bc9190610970565b60405180910390a39392505050565b60008383836040516020016103e293929190610983565b6040516020818303038152906040528051906020012090509392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561044057610440610401565b604052919050565b600067ffffffffffffffff82111561046257610462610401565b5060051b60200190565b600082601f83011261047d57600080fd5b813567ffffffffffffffff81111561049757610497610401565b6104aa601f8201601f1916602001610417565b8181528460208386010111156104bf57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126104ed57600080fd5b813560206105026104fd83610448565b610417565b8083825260208201915060208460051b87010193508684111561052457600080fd5b602086015b848110156105405780358352918301918301610529565b509695505050505050565b600082601f83011261055c57600080fd5b8135602061056c6104fd83610448565b82815260059290921b8401810191818101908684111561058b57600080fd5b8286015b8481101561054057803567ffffffffffffffff8111156105af5760008081fd5b6105bd8986838b010161046c565b84525091830191830161058f565b6000806000606084860312156105e057600080fd5b833567ffffffffffffffff808211156105f857600080fd5b818601915086601f83011261060c57600080fd5b8135602061061c6104fd83610448565b82815260059290921b8401810191818101908a84111561063b57600080fd5b8286015b84811015610673578035868111156106575760008081fd5b6106658d86838b010161046c565b84525091830191830161063f565b509750508701359250508082111561068a57600080fd5b610696878388016104dc565b935060408601359150808211156106ac57600080fd5b506106b98682870161054b565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156107045783516001600160a01b0316835292840192918401916001016106df565b50909695505050505050565b60008060006060848603121561072557600080fd5b833567ffffffffffffffff8082111561073d57600080fd5b6107498783880161046c565b945060208601359350604086013591508082111561076657600080fd5b506106b98682870161046c565b60008060006060848603121561078857600080fd5b833567ffffffffffffffff808211156107a057600080fd5b6107ac8783880161046c565b945060208601359150808211156107c257600080fd5b6107ce8783880161046c565b9350604086013591508082111561076657600080fd5b6001600160a01b03811681146107f957600080fd5b50565b60008060006060848603121561081157600080fd5b833567ffffffffffffffff81111561082857600080fd5b6108348682870161046c565b93505060208401359150604084013561084c816107e4565b809150509250925092565b60006020828403121561086957600080fd5b813567ffffffffffffffff81111561088057600080fd5b61088c8482850161046c565b949350505050565b6000602082840312156108a657600080fd5b81356108b1816107e4565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60005b838110156108e95781810151838201526020016108d1565b50506000910152565b6000815180845261090a8160208601602086016108ce565b601f01601f19169290920160200192915050565b60608152600061093160608301866108f2565b846020840152828103604084015261094981856108f2565b9695505050505050565b60006020828403121561096557600080fd5b81516108b1816107e4565b6020815260006108b160208301846108f2565b600084516109958184602089016108ce565b8451908301906109a98183602089016108ce565b84519101906109bc8183602088016108ce565b019594505050505056fea2646970667358221220cb4098a7770986f9bd5aa1a2c8c16982263d679bf8bdcd6888adc42febbcdb0f64736f6c63430008180033";

type MailBoxFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MailBoxFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MailBoxFactory__factory extends ContractFactory {
  constructor(...args: MailBoxFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MailBoxFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MailBoxFactory__factory {
    return super.connect(runner) as MailBoxFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MailBoxFactoryInterface {
    return new Interface(_abi) as MailBoxFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MailBoxFactory {
    return new Contract(address, _abi, runner) as unknown as MailBoxFactory;
  }
}
