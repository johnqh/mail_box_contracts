/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MockUSDC, MockUSDCInterface } from "../MockUSDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260096080908152684d6f636b205553444360b81b60a052600290610028908261012e565b506040805180820190915260048152635553444360e01b6020820152600390610051908261012e565b506004805460ff1916600617905564e8d4a5100060055534801561007457600080fd5b50600554336000908152602081905260409020556101ed565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100b757607f821691505b6020821081036100d757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610129576000816000526020600020601f850160051c810160208610156101065750805b601f850160051c820191505b8181101561012557828155600101610112565b5050505b505050565b81516001600160401b038111156101475761014761008d565b61015b8161015584546100a3565b846100dd565b602080601f83116001811461019057600084156101785750858301515b600019600386901b1c1916600185901b178555610125565b600085815260208120601f198616915b828110156101bf578886015182559484019460019091019084016101a0565b50858210156101dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61062d806101fc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461012d57806370a082311461014257806395d89b4114610162578063a9059cbb1461016a578063dd62ed3e1461017d57600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100fb578063313ce5671461010e575b600080fd5b6100ab6101a8565b6040516100b89190610462565b60405180910390f35b6100d46100cf3660046104cd565b610236565b60405190151581526020016100b8565b6100ed60055481565b6040519081526020016100b8565b6100d46101093660046104f7565b610264565b60045461011b9060ff1681565b60405160ff90911681526020016100b8565b61014061013b3660046104cd565b610357565b005b6100ed610150366004610533565b60006020819052908152604090205481565b6100ab6103a1565b6100d46101783660046104cd565b6103ae565b6100ed61018b36600461054e565b600160209081526000928352604080842090915290825290205481565b600280546101b590610581565b80601f01602080910402602001604051908101604052809291908181526020018280546101e190610581565b801561022e5780601f106102035761010080835404028352916020019161022e565b820191906000526020600020905b81548152906001019060200180831161021157829003601f168201915b505050505081565b3360009081526001602081815260408084206001600160a01b03871685529091529091208290555b92915050565b6001600160a01b0383166000908152602081905260408120548211806102ac57506001600160a01b038416600090815260016020908152604080832033845290915290205482115b156102b957506000610350565b6001600160a01b038416600090815260208190526040812080548492906102e19084906105d1565b90915550506001600160a01b0383166000908152602081905260408120805484929061030e9084906105e4565b90915550506001600160a01b0384166000908152600160209081526040808320338452909152812080548492906103469084906105d1565b9091555060019150505b9392505050565b6001600160a01b0382166000908152602081905260408120805483929061037f9084906105e4565b92505081905550806005600082825461039891906105e4565b90915550505050565b600380546101b590610581565b336000908152602081905260408120548211156104085760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640160405180910390fd5b33600090815260208190526040812080548492906104279084906105d1565b90915550506001600160a01b038316600090815260208190526040812080548492906104549084906105e4565b909155506001949350505050565b60006020808352835180602085015260005b8181101561049057858101830151858201604001528201610474565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146104c857600080fd5b919050565b600080604083850312156104e057600080fd5b6104e9836104b1565b946020939093013593505050565b60008060006060848603121561050c57600080fd5b610515846104b1565b9250610523602085016104b1565b9150604084013590509250925092565b60006020828403121561054557600080fd5b610350826104b1565b6000806040838503121561056157600080fd5b61056a836104b1565b9150610578602084016104b1565b90509250929050565b600181811c9082168061059557607f821691505b6020821081036105b557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561025e5761025e6105bb565b8082018082111561025e5761025e6105bb56fea26469706673582212202c810984fc80e103ca857eede5d8f79f9ac67fc4b761f1eb53a974b50f78867264736f6c63430008180033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
