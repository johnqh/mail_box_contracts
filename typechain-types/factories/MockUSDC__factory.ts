/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MockUSDC, MockUSDCInterface } from "../MockUSDC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052600960a0908152684d6f636b205553444360b81b60c0526002906100289082610134565b506040805180820190915260048152635553444360e01b60208201526003906100519082610134565b506004805460ff1916600617905564e8d4a5100060055534801561007457600080fd5b50336080819052600554600091825260208290526040909120556101f3565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100bd57607f821691505b6020821081036100dd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561012f576000816000526020600020601f850160051c8101602086101561010c5750805b601f850160051c820191505b8181101561012b57828155600101610118565b5050505b505050565b81516001600160401b0381111561014d5761014d610093565b6101618161015b84546100a9565b846100e3565b602080601f831160018114610196576000841561017e5750858301515b600019600386901b1c1916600185901b17855561012b565b600085815260208120601f198616915b828110156101c5578886015182559484019460019091019084016101a6565b50858210156101e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516106c36102156000396000818161017201526103d201526106c36000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461013857806370a082311461014d5780638da5cb5b1461016d57806395d89b41146101ac578063a9059cbb146101b4578063dd62ed3e146101c757600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610106578063313ce56714610119575b600080fd5b6100b66101f2565b6040516100c391906104f1565b60405180910390f35b6100df6100da36600461055c565b610280565b60405190151581526020016100c3565b6100f860055481565b6040519081526020016100c3565b6100df610114366004610586565b6102ae565b6004546101269060ff1681565b60405160ff90911681526020016100c3565b61014b61014636600461055c565b6103c7565b005b6100f861015b3660046105c2565b60006020819052908152604090205481565b6101947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b6100b661045a565b6100df6101c236600461055c565b610467565b6100f86101d53660046105e4565b600160209081526000928352604080842090915290825290205481565b600280546101ff90610617565b80601f016020809104026020016040519081016040528092919081815260200182805461022b90610617565b80156102785780601f1061024d57610100808354040283529160200191610278565b820191906000526020600020905b81548152906001019060200180831161025b57829003601f168201915b505050505081565b3360009081526001602081815260408084206001600160a01b03871685529091529091208290555b92915050565b6001600160a01b0383166000908152602081905260408120548211156102e757604051631e9acf1760e31b815260040160405180910390fd5b6001600160a01b038416600090815260016020908152604080832033845290915290205482111561032b576040516313be252b60e01b815260040160405180910390fd5b6001600160a01b03841660009081526020819052604081208054849290610353908490610667565b90915550506001600160a01b0383166000908152602081905260408120805484929061038090849061067a565b90915550506001600160a01b0384166000908152600160209081526040808320338452909152812080548492906103b8908490610667565b90915550600195945050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461041057604051635fc483c560e01b815260040160405180910390fd5b6001600160a01b0382166000908152602081905260408120805483929061043890849061067a565b925050819055508060056000828254610451919061067a565b90915550505050565b600380546101ff90610617565b3360009081526020819052604081205482111561049757604051631e9acf1760e31b815260040160405180910390fd5b33600090815260208190526040812080548492906104b6908490610667565b90915550506001600160a01b038316600090815260208190526040812080548492906104e390849061067a565b909155506001949350505050565b60006020808352835180602085015260005b8181101561051f57858101830151858201604001528201610503565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461055757600080fd5b919050565b6000806040838503121561056f57600080fd5b61057883610540565b946020939093013593505050565b60008060006060848603121561059b57600080fd5b6105a484610540565b92506105b260208501610540565b9150604084013590509250925092565b6000602082840312156105d457600080fd5b6105dd82610540565b9392505050565b600080604083850312156105f757600080fd5b61060083610540565b915061060e60208401610540565b90509250929050565b600181811c9082168061062b57607f821691505b60208210810361064b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102a8576102a8610651565b808201808211156102a8576102a861065156fea26469706673582212207fd972855a4f28260c3e3470e81128a2de04fbc0cce2ab6bc569a4265264179f64736f6c63430008180033";

type MockUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUSDC__factory extends ContractFactory {
  constructor(...args: MockUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockUSDC__factory {
    return super.connect(runner) as MockUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new Interface(_abi) as MockUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockUSDC {
    return new Contract(address, _abi, runner) as unknown as MockUSDC;
  }
}
