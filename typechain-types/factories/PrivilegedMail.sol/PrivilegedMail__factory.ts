/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivilegedMail,
  PrivilegedMailInterface,
} from "../../PrivilegedMail.sol/PrivilegedMail";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "MailSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "PreparedMailSent",
    type: "event",
  },
  {
    inputs: [],
    name: "SEND_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "sendPrepared",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610862380380610862833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161073f6101236000396000818160c70152818160f40152610202015261073f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac85514610051578063149e78d81461006f578063efd1fe021461008d578063efd719da146100a9575b600080fd5b6100596100c5565b604051610066919061039e565b60405180910390f35b6100776100e9565b60405161008491906103d2565b60405180910390f35b6100a760048036038101906100a2919061045c565b6100f0565b005b6100c360048036038101906100be91906104e7565b6101fe565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b620186a081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330620186a06040518463ffffffff1660e01b81526004016101529392919061058b565b6020604051808303816000875af1158015610171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019591906105fa565b905080156101f95782826040516101ad929190610666565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f316198513b27570102b564be4832c51b091534265b22bd176f8a67bc9c4a22c560405160405180910390a35b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330620186a06040518463ffffffff1660e01b81526004016102609392919061058b565b6020604051808303816000875af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a391906105fa565b90508015610317578573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17dd1c2bbad2c19fa9e0e34253e73d5f9902484fc1f967c67dd7ae681c9e4db38787878760405161030e94939291906106ce565b60405180910390a35b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061036461035f61035a8461031f565b61033f565b61031f565b9050919050565b600061037682610349565b9050919050565b60006103888261036b565b9050919050565b6103988161037d565b82525050565b60006020820190506103b3600083018461038f565b92915050565b6000819050919050565b6103cc816103b9565b82525050565b60006020820190506103e760008301846103c3565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261041c5761041b6103f7565b5b8235905067ffffffffffffffff811115610439576104386103fc565b5b60208301915083600182028301111561045557610454610401565b5b9250929050565b60008060208385031215610473576104726103ed565b5b600083013567ffffffffffffffff811115610491576104906103f2565b5b61049d85828601610406565b92509250509250929050565b60006104b48261031f565b9050919050565b6104c4816104a9565b81146104cf57600080fd5b50565b6000813590506104e1816104bb565b92915050565b600080600080600060608688031215610503576105026103ed565b5b6000610511888289016104d2565b955050602086013567ffffffffffffffff811115610532576105316103f2565b5b61053e88828901610406565b9450945050604086013567ffffffffffffffff811115610561576105606103f2565b5b61056d88828901610406565b92509250509295509295909350565b610585816104a9565b82525050565b60006060820190506105a0600083018661057c565b6105ad602083018561057c565b6105ba60408301846103c3565b949350505050565b60008115159050919050565b6105d7816105c2565b81146105e257600080fd5b50565b6000815190506105f4816105ce565b92915050565b6000602082840312156106105761060f6103ed565b5b600061061e848285016105e5565b91505092915050565b600081905092915050565b82818337600083830152505050565b600061064d8385610627565b935061065a838584610632565b82840190509392505050565b6000610673828486610641565b91508190509392505050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b60006106ad838561067f565b93506106ba838584610632565b6106c383610690565b840190509392505050565b600060408201905081810360008301526106e98186886106a1565b905081810360208301526106fe8184866106a1565b90509594505050505056fea26469706673582212206c43d43c5b272ec9eef8040ef1e78ec1ccd6c22d454ec7e148adc48e14a8ba5264736f6c63430008180033";

type PrivilegedMailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivilegedMailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivilegedMail__factory extends ContractFactory {
  constructor(...args: PrivilegedMailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      PrivilegedMail & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivilegedMail__factory {
    return super.connect(runner) as PrivilegedMail__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivilegedMailInterface {
    return new Interface(_abi) as PrivilegedMailInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivilegedMail {
    return new Contract(address, _abi, runner) as unknown as PrivilegedMail;
  }
}
