/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivilegedMail,
  PrivilegedMailInterface,
} from "../../PrivilegedMail.sol/PrivilegedMail";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "MailSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "PreparedMailSent",
    type: "event",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "subject",
        type: "string",
      },
      {
        internalType: "string",
        name: "body",
        type: "string",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mailId",
        type: "string",
      },
    ],
    name: "sendPrepared",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052620186a060005534801561001757600080fd5b50604051610acf380380610acf8339818101604052810190610039919061010a565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610137565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d7826100ac565b9050919050565b6100e7816100cc565b81146100f257600080fd5b50565b600081519050610104816100de565b92915050565b6000602082840312156101205761011f6100a7565b5b600061012e848285016100f5565b91505092915050565b60805160a05161095e610171600039600081816101740152610243015260008181610150015281816102780152610385015261095e6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ae39279f1161005b578063ae39279f146100da578063ced72f87146100f8578063efd1fe0214610116578063efd719da146101325761007d565b806311eac8551461008257806369fe0e2d146100a05780638da5cb5b146100bc575b600080fd5b61008a61014e565b6040516100979190610520565b60405180910390f35b6100ba60048036038101906100b5919061057b565b610172565b005b6100c4610241565b6040516100d191906105c9565b60405180910390f35b6100e2610265565b6040516100ef91906105f3565b60405180910390f35b61010061026b565b60405161010d91906105f3565b60405180910390f35b610130600480360381019061012b9190610673565b610274565b005b61014c600480360381019061014791906106ec565b610381565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f7576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080549050816000819055507f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df613028183604051610235929190610781565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b60008054905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33306000546040518463ffffffff1660e01b81526004016102d5939291906107aa565b6020604051808303816000875af11580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610819565b9050801561037c578282604051610330929190610885565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f316198513b27570102b564be4832c51b091534265b22bd176f8a67bc9c4a22c560405160405180910390a35b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33306000546040518463ffffffff1660e01b81526004016103e2939291906107aa565b6020604051808303816000875af1158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190610819565b90508015610499578573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17dd1c2bbad2c19fa9e0e34253e73d5f9902484fc1f967c67dd7ae681c9e4db38787878760405161049094939291906108ed565b60405180910390a35b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104e66104e16104dc846104a1565b6104c1565b6104a1565b9050919050565b60006104f8826104cb565b9050919050565b600061050a826104ed565b9050919050565b61051a816104ff565b82525050565b60006020820190506105356000830184610511565b92915050565b600080fd5b600080fd5b6000819050919050565b61055881610545565b811461056357600080fd5b50565b6000813590506105758161054f565b92915050565b6000602082840312156105915761059061053b565b5b600061059f84828501610566565b91505092915050565b60006105b3826104a1565b9050919050565b6105c3816105a8565b82525050565b60006020820190506105de60008301846105ba565b92915050565b6105ed81610545565b82525050565b600060208201905061060860008301846105e4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106335761063261060e565b5b8235905067ffffffffffffffff8111156106505761064f610613565b5b60208301915083600182028301111561066c5761066b610618565b5b9250929050565b6000806020838503121561068a5761068961053b565b5b600083013567ffffffffffffffff8111156106a8576106a7610540565b5b6106b48582860161061d565b92509250509250929050565b6106c9816105a8565b81146106d457600080fd5b50565b6000813590506106e6816106c0565b92915050565b6000806000806000606086880312156107085761070761053b565b5b6000610716888289016106d7565b955050602086013567ffffffffffffffff81111561073757610736610540565b5b6107438882890161061d565b9450945050604086013567ffffffffffffffff81111561076657610765610540565b5b6107728882890161061d565b92509250509295509295909350565b600060408201905061079660008301856105e4565b6107a360208301846105e4565b9392505050565b60006060820190506107bf60008301866105ba565b6107cc60208301856105ba565b6107d960408301846105e4565b949350505050565b60008115159050919050565b6107f6816107e1565b811461080157600080fd5b50565b600081519050610813816107ed565b92915050565b60006020828403121561082f5761082e61053b565b5b600061083d84828501610804565b91505092915050565b600081905092915050565b82818337600083830152505050565b600061086c8385610846565b9350610879838584610851565b82840190509392505050565b6000610892828486610860565b91508190509392505050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b60006108cc838561089e565b93506108d9838584610851565b6108e2836108af565b840190509392505050565b600060408201905081810360008301526109088186886108c0565b9050818103602083015261091d8184866108c0565b90509594505050505056fea264697066735822122002c1f24102c340b6fd3117edda233c7c663362486f52a2392bfe2d8a7253734f64736f6c63430008180033";

type PrivilegedMailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivilegedMailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivilegedMail__factory extends ContractFactory {
  constructor(...args: PrivilegedMailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      PrivilegedMail & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivilegedMail__factory {
    return super.connect(runner) as PrivilegedMail__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivilegedMailInterface {
    return new Interface(_abi) as PrivilegedMailInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivilegedMail {
    return new Contract(address, _abi, runner) as unknown as PrivilegedMail;
  }
}
